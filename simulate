#!/usr/local/bin/perl
use List::Util qw(first max maxstr min minstr reduce shuffle sum);
my $nMax = 2;
my $nMin = $ARGV[0];
$nMax = $ARGV[1];
my $rep = 1;
my $verbose = false;
my $tracing = true;
my $totalSimTime = 10;
my $seed = -1; #Keep -1 to leave unchanged
my $ECA = false;
my $hyst = true;
my @command = './waf --cwd=tmp/ --run "scratch/wlan';

if( ($#ARGV+1) > 1){
	die("Different ranges, please. \n./simulate min max\n")
		if($nMax - $nMin <= 0);
	foreach my $i ($nMin..$nMax){
		foreach my $j (1 .. $rep){
			$seed = int(rand()*50)
				if($seed > 0);
			my @addition = ("--nWifi=$i --verbose=$verbose --seed=$seed --totalSimtime=$totalSimTime 
				--ECA=$ECA --tracing=$tracing --hysteresis=$hyst\"");
			my @outPut = "@command @addition";
			print("###Simulating iteration $j of $rep\n");
			system(@outPut);
		}
	}
}else{
		die("More than one node, please\n")
			if($nMin <= 1);
		foreach my $j (1 .. $rep){
			$seed = int(rand()*50)
				if($seed > 0);
			my @send = ("@command --nWifi=$nMin --verbose=$verbose --seed=$seed --totalSimtime=$totalSimTime 
				--ECA=$ECA --tracing=$tracing --hysteresis=$hyst\"");
			print("###Simulating iteration $j of $rep\n");
			system(@send);
		}
}



