#!/usr/local/bin/perl
use Switch;
use List::Util qw(first max maxstr min minstr reduce shuffle sum);
use Statistics::Basic qw(:all);

my $inputFile = 'tx.log';
my $highNodes = 0;
my $lowNodes = 1000;
my $outputFile = "staAveraged";
my $sxTxCode = 1;
my $failTxCode = 2;
my $txCode = 3;
my $txDurationCode = 5;

open(my $input, "<", $inputFile)
	or die "Could not open file '$inputFile' $!";

#Finding the node limits
while (my $row = <$input>){
	chomp($row);
	my @data = split(/\s+/, $row);
	$highNodes = $data[1]
		if($highNodes < $data[1]);
	$lowNodes = $data[1]
		if($lowNodes > $data[1]);
}
$outputFile = "$outputFile-$highNodes.dat";

open(my $fw, ">", $outputFile)
    or die "Could not open write file $outputFile $!";
#Odd indexes are standard deviations in the resulting file
print $fw ("#1 Station #2 AvgSxTx #3 AvgFailed #4 AvgTxAttmpt #5\n");

NEXT: foreach($lowNodes .. $highNodes){
	open(my $input, "<", $inputFile)
		or die "Could not open file '$inputFile' $!";
	my $thereIsData = 0;
	my @metrics;
	while(my $row = <$input>){
		chomp($row);
		my @data = split(/\s+/, $row);
		if($data[1] == $_){
			$thereIsData = 1;
			$metrics[$data[2]] = $data[3]; 
		}
	}
	next NEXT 
		if($thereIsData == 0);

	my $avg;
	my $std;
	print $fw "$_ ";
	foreach my $i (1 .. $#metrics){
		if(!($metrics[$i]))
		{
			print $fw "0 ";
		}else{
			print $fw "$metrics[$i] ";
		}
	}
	print $fw "\n";
}